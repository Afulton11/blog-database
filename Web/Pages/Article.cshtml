@page "{id:int}"
@model Web.Pages.ArticleModel

@using Microsoft.AspNetCore.Identity
@using Domain.Entities.Blog
@using System.Security.Claims;
@inject SignInManager<User> SignInManager
@{
    ViewData["Title"] = Model.Article.Title;
    var article = Model.Article;

    var currentUser = User.FindFirstValue(ClaimTypes.NameIdentifier);

    var isAuthorViewingArticle = currentUser == article.AuthorUserId.ToString();
}

<p class="metadata">
    <span class="date">
        @article.CreationDateTime.ToString("MMMM dd, yyyy")
    </span>
    <span class="by">
        by
    </span>
    <span class="author">
        <a asp-page="User" asp-route-id="@article.AuthorUserId">
            @article.AuthorFullName
        </a>
    </span>
</p>
<h1 class="title">
    @article.Title
</h1>
@if (SignInManager.IsSignedIn(User))
{
    @if (article.DidUserFavorite)
    {
        <form class="favorite isFavorited" asp-page-handler="deleteUserFavorite">
            <input type="hidden" name="userId" value="@int.Parse(currentUser)" />
            <input type="hidden" name="articleId" value="@article.ArticleId" />
            <button class="btn btn-outline fa fa-heart" style="color: red" type="submit"> @article.FavoriteCount</button>
        </form>
    }
    else
    {
        <form class="favorite" asp-page-handler="addUserFavorite">
            <input type="hidden" name="userId" value="@int.Parse(currentUser)" />
            <input type="hidden" name="articleId" value="@article.ArticleId" />
            <button class="btn btn-outline fa fa-heart" type="submit">  @article.FavoriteCount</button>
        </form>
    }
}
else
{
    <p class="fa fa-heart favorite"> @article.FavoriteCount</p>
}
@if (isAuthorViewingArticle)
{
    <div class="article-tags" style="padding-bottom: 10px">
        <a class="fa-edit" asp-page="/Edit/Article" asp-route-id="@article.ArticleId">
            Edit
        </a>
    </div>
}
<div class="article-tags">
    <ul class="tag-list">
        <li class="category">
            <a asp-page="/Category" asp-route-name="@article.CategoryName" rel="category tag">
                @article.CategoryName
            </a>
        </li>
    </ul>
</div>
<div class="article-reading-content">
    <p>
        @article.Body
    </p>
</div>
<div class="large-space"></div>
<nav class="article-navigation">
    <div class="previous">
        <a href="#" rel="previous">
            <span class="metadata">← Previous Article</span>
            <br /> Stack Overflow Age
        </a>
    </div>
    <div class="next">
        <a href="#" rel="next">
            <span class="metadata">Next Article →</span>
            <br /> Strange and Maddening Rules
        </a>
    </div>
</nav>

@if (Model.Comments.Any() || SignInManager.IsSignedIn(User))
{
    <br />
    <br />
    <h1>Comments</h1>
    <br />

    @if (SignInManager.IsSignedIn(User))
    {
        <partial name="_AddCommentPartial" model="Model.AddCommentModel" />
    }
}

@foreach (var comment in Model.Comments)
{
    <div style="padding-left: @Html.Raw(comment.Depth * 2.5)em">
        <partial name="_CommentPartial" model="@comment" />
    </div>
}

<nav class="article-navigation">
    @if (Model.CanShowPreviousComments)
    {
        <div class="previous">
            <a asp-page="/Article" asp-route-id="@Model.Article.ArticleId" asp-route-CurrentPage="@(Model.CurrentPage - 1)" rel="prev">
                <span class="metadata">← Comments</span>
                <br /> Previous
            </a>
        </div>
    }
    @if (Model.CanShowMoreComments)
    {
        <div class="next">
            <a asp-page="/Article" asp-route-id="@Model.Article.ArticleId" asp-route-CurrentPage="@(Model.CurrentPage + 1)" rel="next">
                <span class="metadata">Comments →</span>
                <br /> More
            </a>
        </div>
    }
</nav>

